//////////////////////////////////////////////////////////////////////////////////////////////////
//
// 파일이름: const.cpp
//
// 내용: const관련
//
//////////////////////////////////////////////////////////////////////////////////////////////////

#include "d3dUtility.h"
#include "const.h"
#include "unit.h"

LOCALIZATION_ENUM_KEY tribe_type_string[TRI_MAX]=
{
	LOC_SYSTEM_TRIBE_HUMAN,
	LOC_SYSTEM_TRIBE_WIZARD,
	LOC_SYSTEM_TRIBE_FAIRY,
	LOC_SYSTEM_TRIBE_CROWTENGU,
	LOC_SYSTEM_TRIBE_WOLFTENGU,
	LOC_SYSTEM_TRIBE_KAPPA,
	LOC_SYSTEM_TRIBE_NECOMATA,
	LOC_SYSTEM_TRIBE_OARFISH,
	LOC_SYSTEM_TRIBE_CHEUKUMOGAMI,
	LOC_SYSTEM_TRIBE_ONI,
	LOC_SYSTEM_TRIBE_HALFYOUKAI,
	LOC_SYSTEM_TRIBE_WRAITH,
	LOC_SYSTEM_TRIBE_VAMPIRE,
	LOC_SYSTEM_TRIBE_YOUKAI
};


LOCALIZATION_ENUM_KEY job_type_string[JOB_MAX]=
{
	LOC_SYSTEM_JOB_WARRIOR,
	LOC_SYSTEM_JOB_WIZARD,
	LOC_SYSTEM_JOB_SHAMAN,
	LOC_SYSTEM_JOB_GLADIATOR,
	LOC_SYSTEM_JOB_MONK,
	LOC_SYSTEM_JOB_CRUSADER,
	LOC_SYSTEM_JOB_BERSERKER,
	LOC_SYSTEM_JOB_FIRE_WIZARD,
	LOC_SYSTEM_JOB_COLD_WIZARD,
	LOC_SYSTEM_JOB_EARTH_WIZARD,
	LOC_SYSTEM_JOB_AIR_WIZARD,
	LOC_SYSTEM_JOB_SUMMON_WIZARD,
	LOC_SYSTEM_JOB_ALCHEMIST,
	LOC_SYSTEM_JOB_PSYCHOLOGIST,
	LOC_SYSTEM_JOB_REAPER,
	LOC_SYSTEM_JOB_FANATIC,
	LOC_SYSTEM_JOB_ASSASSIN,
	LOC_SYSTEM_JOB_FARMER,
	LOC_SYSTEM_JOB_MADE,
	LOC_SYSTEM_JOB_ENGINEER,
	LOC_SYSTEM_JOB_MISSING,
	LOC_SYSTEM_JOB_LIGHT_WIZARD
};

LOCALIZATION_ENUM_KEY dungeon_tile_tribe_type_string[]=
{
	LOC_SYSTEM_TILE_UNKNOWN,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,//5
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,//10
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_FLOOR,
	LOC_SYSTEM_TILE_OIL,
	LOC_SYSTEM_TILE_SNOW, //15
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_SYSTEM_TILE_OPEN_DOOR,//25
	LOC_SYSTEM_TILE_STAIR_DOWN,
	LOC_SYSTEM_TILE_STAIR_UP,
	LOC_SYSTEM_TILE_STAIR_TEMPLE,
	LOC_SYSTEM_TILE_STAIR_MISTY_LAKE,
	LOC_SYSTEM_TILE_STAIR_YOUKAI_MOUNTAIN,
	LOC_SYSTEM_TILE_STAIR_SCARLET,
	LOC_SYSTEM_TILE_STAIR_LIBRARY,
	LOC_SYSTEM_TILE_STAIR_SCARLET_UNDER,
	LOC_SYSTEM_TILE_STAIR_BAMBOO,
	LOC_SYSTEM_TILE_STAIR_EIENTEI,
	LOC_SYSTEM_TILE_STAIR_SUBTERRANEAN,
	LOC_SYSTEM_TILE_STAIR_YUKKURI,
	LOC_SYSTEM_TILE_STAIR_DEPTH,
	LOC_SYSTEM_TILE_STAIR_DREAM,
	LOC_SYSTEM_TILE_STAIR_MOON,
	LOC_SYSTEM_TILE_STAIR_PANDEMONIUM,
	LOC_SYSTEM_TILE_STAIR_HAKUREI,
	LOC_SYSTEM_TILE_STAIR_ZIGURRAT,
	LOC_SYSTEM_TILE_STAIR_RETURN,
	LOC_SYSTEM_TILE_TEMPLE_JOON_AND_SION,
	LOC_SYSTEM_TILE_TEMPLE_BYAKUREN,
	LOC_SYSTEM_TILE_TEMPLE_KANAKO,
	LOC_SYSTEM_TILE_TEMPLE_SUWAKO,
	LOC_SYSTEM_TILE_TEMPLE_MINORIKO,
	LOC_SYSTEM_TILE_TEMPLE_MIMA,
	LOC_SYSTEM_TILE_TEMPLE_SHINKI,
	LOC_SYSTEM_TILE_TEMPLE_YUUGI,
	LOC_SYSTEM_TILE_TEMPLE_SHIZUHA,
	LOC_SYSTEM_TILE_TEMPLE_HINA,
	LOC_SYSTEM_TILE_TEMPLE_YUKARI,
	LOC_SYSTEM_TILE_TEMPLE_EIRIN,
	LOC_SYSTEM_TILE_TEMPLE_YUYUKO,
	LOC_SYSTEM_TILE_TEMPLE_SATORI,
	LOC_SYSTEM_TILE_TEMPLE_TENSI,
	LOC_SYSTEM_TILE_TEMPLE_SEIJA,
	LOC_SYSTEM_TILE_TEMPLE_LILLY,
	LOC_SYSTEM_TILE_TEMPLE_MIKO,
	LOC_SYSTEM_TILE_TEMPLE_OKINA,
	LOC_SYSTEM_TILE_TEMPLE_JUNKO,
	LOC_SYSTEM_TILE_TEMPLE_SHIKIEIKI,
	LOC_SYSTEM_TILE_TEMPLE_KEIKI,
	LOC_SYSTEM_TILE_TEMPLE_TENKYUU,
	LOC_EMPTYSTRING,
	LOC_EMPTYSTRING,
	LOC_SYSTEM_TILE_STONE_WALL,//70
	LOC_SYSTEM_TILE_STONE_WALL,
	LOC_SYSTEM_TILE_RED_WALL,
	LOC_SYSTEM_TILE_BOOK_WALL,
	LOC_SYSTEM_TILE_BAMBOO_WALL,
	LOC_SYSTEM_TILE_PANDEMONIUM_WALL,
	LOC_SYSTEM_TILE_PANDEMONIUM_WALL,
	LOC_SYSTEM_TILE_PANDEMONIUM_WALL,
	LOC_SYSTEM_TILE_PANDEMONIUM_WALL,
	LOC_SYSTEM_TILE_PANDEMONIUM_WALL,
	LOC_SYSTEM_TILE_PANDEMONIUM_WALL,
	LOC_SYSTEM_TILE_PANDEMONIUM_WALL,
	LOC_SYSTEM_TILE_WOOD,
	LOC_SYSTEM_TILE_SUNFLOWER,
	LOC_SYSTEM_TILE_HELL_WALL,
	LOC_SYSTEM_TILE_IRON_WALL,
	LOC_SYSTEM_TILE_WALL,
	LOC_SYSTEM_TILE_WALL,
	LOC_SYSTEM_TILE_CLOSE_DOOR,
	LOC_SYSTEM_TILE_IZAKAYA,
	LOC_SYSTEM_TILE_GRAVE,
	LOC_SYSTEM_TILE_SNOWMAN,
	LOC_SYSTEM_TILE_GRASS,
	LOC_SYSTEM_TILE_STATUE,
	LOC_SYSTEM_TILE_BUDDHA_STATUE,
	LOC_SYSTEM_TILE_DEEP_WATER,
	LOC_SYSTEM_TILE_LAVA
};

LOCALIZATION_ENUM_KEY rune_string[] =
{	
	LOC_SYSTEM_ITEM_RUNE_SCARLET,
	LOC_SYSTEM_ITEM_RUNE_YOUKAI_MOUNTAIN,
	LOC_SYSTEM_ITEM_RUNE_FLANDRE,
	LOC_SYSTEM_ITEM_RUNE_YUKKURI,
	LOC_SYSTEM_ITEM_RUNE_EIENTEI,
	LOC_SYSTEM_ITEM_RUNE_SUBTERRANEAN,
	LOC_SYSTEM_ITEM_RUNE_MOON,
	LOC_SYSTEM_ITEM_RUNE_HOKKAI,
	LOC_SYSTEM_ITEM_RUNE_FROZEN_FIELD,
	LOC_SYSTEM_ITEM_RUNE_PANDEMONIUM,
	LOC_SYSTEM_ITEM_YINYANG
};

const D3DCOLOR CL_normal = D3DCOLOR_RGBA(255, 255, 255, 255);
const D3DCOLOR CL_bad = D3DCOLOR_RGBA(100, 100, 100, 255);
const D3DCOLOR CL_punish_bad = D3DCOLOR_RGBA(100, 50, 50, 255);
const D3DCOLOR CL_verybad = D3DCOLOR_RGBA(50, 50, 50, 255);
const D3DCOLOR CL_none = D3DCOLOR_RGBA(0, 0, 0, 255);
const D3DCOLOR CL_help = D3DCOLOR_RGBA(125, 200, 255, 255);
const D3DCOLOR CL_good = D3DCOLOR_RGBA(0, 255, 0, 255);
const D3DCOLOR CL_dark_good = D3DCOLOR_RGBA(0, 200, 0, 255);
const D3DCOLOR CL_darkblue = D3DCOLOR_RGBA(0, 0, 200, 255);
const D3DCOLOR CL_blue = D3DCOLOR_RGBA(0, 50, 255, 255);
const D3DCOLOR CL_white_blue = D3DCOLOR_RGBA(100, 100, 255, 255);
const D3DCOLOR CL_tensi = D3DCOLOR_RGBA(185, 122, 87, 255);
const D3DCOLOR CL_alchemy = D3DCOLOR_RGBA(255, 128, 39, 255);
const D3DCOLOR CL_green = D3DCOLOR_RGBA(0, 200, 0, 255);
const D3DCOLOR CL_yuigi = D3DCOLOR_RGBA(215, 215, 255, 255);
const D3DCOLOR CL_hina = D3DCOLOR_RGBA(0, 200, 0, 255);
const D3DCOLOR CL_warning = D3DCOLOR_RGBA(255, 255, 0, 255); 
const D3DCOLOR CL_small_danger = D3DCOLOR_RGBA(255, 125, 125, 255); 
const D3DCOLOR CL_danger = D3DCOLOR_RGBA(255, 0, 0, 255); 
const D3DCOLOR CL_STAT = D3DCOLOR_XRGB(200,200,200);
const D3DCOLOR CL_speak = D3DCOLOR_RGBA(255, 255, 255, 255);
const D3DCOLOR CL_magic = D3DCOLOR_RGBA(255, 0, 255, 255);
const D3DCOLOR CL_white_puple = D3DCOLOR_RGBA(255, 128, 255, 255);
const D3DCOLOR CL_yuyuko = D3DCOLOR_RGBA(255, 200, 255, 255);
const D3DCOLOR CL_yukari = D3DCOLOR_RGBA(255, 128, 255, 255);
const D3DCOLOR CL_swako = D3DCOLOR_RGBA(125, 200, 255, 255);
const D3DCOLOR CL_autumn = D3DCOLOR_RGBA(255, 128, 39, 255);
const D3DCOLOR CL_seija = D3DCOLOR_RGBA(153, 128, 255, 255);
const D3DCOLOR CL_lilly = D3DCOLOR_RGBA(255, 210, 233, 255);
const D3DCOLOR CL_miko = D3DCOLOR_RGBA(255, 180, 130, 255);
const D3DCOLOR CL_okina = D3DCOLOR_RGBA(255, 180, 130, 255);
const D3DCOLOR CL_junko = D3DCOLOR_RGBA(255, 180, 130, 255);
const D3DCOLOR CL_black_junko = D3DCOLOR_RGBA(150, 120, 80, 255);
const D3DCOLOR CL_joon_and_sion = D3DCOLOR_RGBA(255, 200, 0, 200);
const D3DCOLOR CL_joon = D3DCOLOR_RGBA(255, 255, 0, 255);
const D3DCOLOR CL_sion = D3DCOLOR_RGBA(50, 50, 255, 255);
const D3DCOLOR CL_eiki = D3DCOLOR_RGBA(255, 180, 130, 255);
const D3DCOLOR CL_keiki = D3DCOLOR_RGBA(255, 180, 130, 255);
const D3DCOLOR CL_tenkyuu = D3DCOLOR_RGBA(255, 180, 130, 255);

const name_infor string_that(LOC_SYSTEM_THAT);
const name_infor string_something(LOC_SYSTEM_SOMETHING);

LOCALIZATION_ENUM_KEY item_weapon_string = LOC_SYSTEM_ITEM_CATEGORY_WEAPON;
LOCALIZATION_ENUM_KEY item_throw_string = LOC_SYSTEM_ITEM_CATEGORY_TANMAC;
LOCALIZATION_ENUM_KEY item_armor_string = LOC_SYSTEM_ITEM_CATEGORY_ARMOUR;
LOCALIZATION_ENUM_KEY item_potion_string = LOC_SYSTEM_ITEM_CATEGORY_POTION;
LOCALIZATION_ENUM_KEY item_food_string = LOC_SYSTEM_ITEM_CATEGORY_FOOD;
LOCALIZATION_ENUM_KEY item_scroll_string = LOC_SYSTEM_ITEM_CATEGORY_SCROLL;
LOCALIZATION_ENUM_KEY item_spell_string = LOC_SYSTEM_ITEM_CATEGORY_SPELLCARD;
LOCALIZATION_ENUM_KEY item_jewelry_string = LOC_SYSTEM_ITEM_CATEGORY_JEWELRY;
LOCALIZATION_ENUM_KEY item_book_string = LOC_SYSTEM_ITEM_CATEGORY_BOOK;
LOCALIZATION_ENUM_KEY item_miscellaneous_string = LOC_SYSTEM_ITEM_CATEGORY_EVOCABLE;
LOCALIZATION_ENUM_KEY item_goal_string = LOC_SYSTEM_ITEM_CATEGORY_GOAL;
LOCALIZATION_ENUM_KEY item_other_string = LOC_SYSTEM_ITEM_CATEGORY_OTHER;



const int level_up_value[] = {
	10, 
	30,		//20	2
	70,		//40	3
	140,	//70	4
	260,	//120	5
	460,	//200	6
	800,	//340	7
	1400,	//600	8
	2500,	//1100	9
	3700,	//2200	10
	7700,	//4000	11
	15700,	//8000	12
	30000,	//14300	13
	50000,	//20000	14
	75000,	//25000	15
	106000,	//31000	16
	143000,	//37000	17
	186000,	//43000	18
	235000,	//49000	19
	290000,	//55000	20
	351000,	//61000	21
	418000,	//67000	22
	491000,	//73000	23
	570000,	//79000	24
	655000,	//85000	25
	746000,	//91000	26
	-1 //끝
};
